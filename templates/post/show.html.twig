{% extends "layout/default.html.twig" %}

{% block title %}Détails post
{% endblock %}


{% block header %}

	<header class="masthead" style="background-image: url('{{asset('assets/img/post-bg.jpg')}}')">
		{# <header class="masthead" style="background-image: url('{{asset('uploads/images/'~post.imageFileName)}}')">  #}
		<div class="container position-relative px-4 px-lg-5">
			<div class="row gx-4 gx-lg-5 justify-content-center">
				<div class="col-md-10 col-lg-8 col-xl-7">
					<div class="site-heading">
						<div class="post-heading">
							<h1 class="post-title">{{post.Titre|raw}}</h1>
							<h2 class="post-subtitle">{{post.Description|raw}}</h2>
							<p class="meta">
								Posted by
								<a href="#!">Start Bootstrap</a>
								on
								{{post.CreatedAt|date("m/d/Y")}}
							</p>
						</div>
					</div>
				</div>
			</div>
		</div>
	</header>

{% endblock %}

{% block content %}


	<article class="mb-4">
		<div class="container px-4 px-lg-5">
			<div class="row gx-4 gx-lg-5 justify-content-center">
				<div class="col-md-10 col-lg-8 col-xl-7">
					<p>{{post.Contenu|raw}}</p>

					<h2 class="section-heading">Lorem ipsum dolor int</h2>

					<blockquote class="blockquote">{{post.Contenu|raw}}</blockquote> <!-- |raw pour enlever le <div> qui apparait dans le texte a cause du TextEditorField dans postcrudcontroller-->

					<h2 class="section-heading">Lorem ipsum dolor int</h2>
					<p></p>
					 {# <a href=""><img class="img-fluid" src="{{asset('assets/img/post-sample-image.jpg')}}" alt="..."/></a>  <!--avant les images étaient dans un dossier image--> #}
					<a href=""><img class="img-fluid" src="{{asset('uploads/images/'~post.imageFileName)}}" alt="..."/></a> <!--pour upploader des images-->
					<span class="caption text-muted">To go places and do things that have never been done before – that’s what living is all about.</span>
					<p>{{post.Contenu|raw}}</p>
					<p>{{post.Contenu|raw}}</p>
					<p>
						Placeholder text by
						<a href="http://spaceipsum.com/">Space Ipsum</a>
						&middot; Images by
						<a href="https://www.flickr.com/photos/nasacommons/">NASA on The Commons</a>
					</p>
						
							<button class="like" id="add-like" data-id="{{post.id}}">
								{# <i class="fa-solid fa-thumbs-up"></i> #}
								<span>&#128077;</span>
								
								<span class="nb-like">{% if post.likes|length > 0 %}{{post.likes|length}}{% endif %}</span>
							
								<span>Like</span>
							</button>
				</div>
			</div>
		</div>
	</article>


	{# {% if is_granted ('ROLE_USER') %} #}
	<form class="add-comment" action="" method="POST">
		<label for="">Ajouter un commentaire</label>
		<textarea type="text" id="txtarea-comment" data-id="{{post.id}}"></textarea>
		<button class="btn btn-primary w-25" id="btn-comment" type="button">OK</button>
	</form>
	{# {% endif %} #}


	<!--avec la vue show on carge les commentaires présent dans la BASE de DONNEE quand on arrive sur le details d'un post 
							et avec JS et JSON on charge le nouveau commentaire ajouter sans recharger toute la page-->
	<div
		id="comments">
		<!--- div qui contient tous les commentaires -->
		{% for comment in post.comments %}
			<div
				class="comment">
				<!--- div qui contient un commentaire -->
				<span class="user-commentaire">{{comment.user}}</span>
				<p class="contenu-commentaire">{{comment.content}}</p>
				<span class="date-commentaire">Published on
					{{comment.CreatedAt|date("m/d/Y H:i")}}</span>
			</div>
		{% endfor %}
	</div>

{% endblock %}

{% block javascripts %}
	<script>

	
let btnComment = document.getElementById('btn-comment');

let containerComment = document.getElementById('txtarea-comment'); // je recupere mon element textearea
let postId = containerComment.getAttribute('data-id'); // je recupere l'attribut data-id du textearea et du span


btnComment.addEventListener('click', Valider)

function Valider() {
    
    fetch('/comment/create/'+ postId, {
        method: 'POST',
        headers: {'content-type': 'Application/json'},
        body: JSON.stringify({ 'textareaComment': containerComment.value })
    }) // + postId je recupere l'attribut data-id de textarea
    .then(function (response) {
        return response.json();
    }).then(function (data) { // data c'est $allComments
        
        let comments = document.getElementById('comments');

            comments.innerHTML = ''; //  je vide, je supprime le contenu de la div
           
            for (comment of data) {
                comments.innerHTML += '<div class="comment"><span class="user-commentaire">'+comment.user+'</span><p class="contenu-commentaire">'+comment.content+'</p><span class="date-commentaire">Published on '+comment.createdAt+'</span></div>'
            }

        })
}

///// ajouter un j'aime sur le post avec un click 
		let likePlus = document.querySelector('#add-like');
		let numberLike = document.querySelector('.nb-like');

		likePlus.addEventListener('click', AddLike)

		function AddLike() {
		// console.log(likePlus);
		fetch('/like/create/'+ postId)
		.then(function(response){
			return response.json();
		}).then(function(data){	
			console.log(data);
			numberLike.innerHTML = data.nbLikes;
			if(data.nbLikes < 1){
				numberLike.style.display = "none"	
			}else{
				numberLike.style.display = "inline-block";
			}

		})
		}
	</script>
{% endblock %}
